@using CapiControls.Models.Local.Account
@model CapiControls.ViewModels.IndexViewModel<User>

@{
    ViewData["Title"] = "Пользователи";
}

<h1>Пользователи</h1>

<p>
    <a asp-action="Register">Зарегистрировать пользователя</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Items.First().UserName)</th>
            <th>@Html.DisplayNameFor(model => model.Items.First().Login)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                <td>@Html.DisplayFor(modelItem => item.Login)</td>
                <td>
                    <a asp-controller="User"
                       asp-action="Edit"
                       asp-route-id="@item.Id">Редактировать</a>
                    <a asp-controller="User"
                       asp-action="Details"
                       asp-route-id="@item.Id">Подробнее</a>
                    <a asp-controller="User"
                       asp-action="Delete"
                       asp-route-id="@item.Id">Удалить</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       class="btn btn-secondary">Назад</a>
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       class="btn btn-secondary">Вперед</a>
}